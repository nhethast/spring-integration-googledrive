<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="https://github.com/nhethast/spring-integration-googledrive"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:integration="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	targetNamespace="https://github.com/nhethast/spring-integration-googledrive"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans" />
	<xsd:import namespace="http://www.springframework.org/schema/tool" />
	<xsd:import namespace="http://www.springframework.org/schema/integration"
		schemaLocation="http://www.springframework.org/schema/integration/spring-integration-4.0.xsd" />
	<xsd:import namespace="http://www.springframework.org/schema/integration/file"
		schemaLocation="http://www.springframework.org/schema/integration/file/spring-integration-file-4.0.xsd" />

	<xsd:element name="outbound-channel-adapter">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
                Builds an outbound-channel-adapter that writes files to a remote FTP endpoint.
            ]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="base-gd-adapter-type">
					<xsd:all>
						<xsd:element name="request-handler-advice-chain" type="integration:adviceChainType" minOccurs="0" maxOccurs="1" />
					</xsd:all>
					<xsd:attribute name="order" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								Specifies the order for invocation when this
								endpoint is connected as a
								subscriber to a channel. This is
								particularly relevant when that channel
								is using a "failover"
								dispatching strategy, or when a failure in
								the delivery to one
								subscriber should signal that
								the message should not be sent to
								subscribers with a higher 'order'
								attribute. It has no effect
								when this
								endpoint itself is a Polling Consumer for a channel
								with a queue.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attributeGroup ref="int-file:remoteOutboundAttributeGroup" />
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="inbound-channel-adapter">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
                    Builds an inbound-channel-adapter that synchronizes a local directory with the contents of a remote FTP endpoint.
            ]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="base-gd-adapter-type">
					<xsd:sequence>
						<xsd:element ref="integration:poller" minOccurs="0"
							maxOccurs="1" />
					</xsd:sequence>
					<xsd:attribute name="filename-pattern" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								Allows you to provide a file name pattern to
								determine the file names
								that need to be scanned.
								This is based on
								simple pattern matching (e.g., "*.txt, fo*.txt"
								etc.)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="local-filename-generator-expression"
						type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								Allows you to provide a SpEL expression to
								generate the file name of
								the local (transferred) file. The root
								object of the SpEL
								evaluation is the name of the original
								file.
								For example, a valid expression would be "#this.toUpperCase() +
								'.a'" where #this represents the
								original name of the remote
								file.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="filename-regex" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								Allows you to provide a Regular Expression to
								determine the file names
								that need to be scanned.
								(e.g.,
								"f[o]+\.txt" etc.)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="comparator" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
			Specify a Comparator to be used when ordering Files. If none is provided, the
			order will be determined by the java.io.File implementation of Comparable.
							]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="filter" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type
										type="org.springframework.integration.file.filters.FileListFilter" />
								</tool:annotation>
							</xsd:appinfo>
							<xsd:documentation>
								Allows you to specify a reference to a
								[org.springframework.integration.file.filters.FileListFilter]
								bean. This filter is applied to files on the remote server and
								only files that pass the filter are retrieved.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="local-filter" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type
										type="org.springframework.integration.file.filters.FileListFilter" />
								</tool:annotation>
							</xsd:appinfo>
							<xsd:documentation>
								Allows you to specify a reference to a
								[org.springframework.integration.file.filters.FileListFilter]
								bean. This filter is applied to files after they have been
								retrieved. The default is an AcceptOnceFileListFilter which means that,
								even if a new instance of a file is retrieved from the remote server,
								a message won't be generated. The filter provided here is combined
								with a filter that prevents the message source from processing
								files that are currently being downloaded.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="local-directory" type="xsd:string"
						use="required">
						<xsd:annotation>
							<xsd:documentation>
								Identifies the directory path (e.g.,
								"/local/mytransfers") where files
								will be transferred TO.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="auto-create-local-directory"
						type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								Tells this adapter if the local directory must
								be auto-created if it
								doesn't exist. Default is TRUE.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="delete-remote-files" type="xsd:string" default="false">
						<xsd:annotation>
							<xsd:documentation>
								Specify whether to delete the remote source
								file after copying.
								By default, the remote files will NOT be
								deleted.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="preserve-timestamp" type="xsd:string" default="false">
						<xsd:annotation>
							<xsd:documentation>
								Specify whether to preserve the modified timestamp from the remote source
								file on the local file after copying.
								By default, the remote timestamp will NOT be
								preserved.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="base-gd-adapter-type">
		<xsd:complexContent>
			<xsd:extension base="base-adapter-type">
				<xsd:attribute name="remote-directory" type="xsd:string"
					use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Identifies the remote directory path (e.g., "/remote/mytransfers")
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="temporary-remote-directory" type="xsd:string"
					use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Identifies the remote temporary directory path (e.g., "/remote/temp/mytransfers")
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="channel" type="xsd:string">
					<xsd:annotation>
						<xsd:appinfo>
							<tool:annotation kind="ref">
								<tool:expected-type type="org.springframework.messaging.MessageChannel"/>
							</tool:annotation>
						</xsd:appinfo>
						<xsd:documentation>
							Identifies channel attached to this adapter. Depending on the type of the adapter
							this channel could be the receiving channel (e.g., outbound-channel-adapter) or channel where
							messages will be sent to by this adapter (e.g., inbound-channel-adapter).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="charset" type="xsd:string" default="UTF-8">
					<xsd:annotation>
						<xsd:documentation>
							Allows you to specify Charset (e.g., US-ASCII, ISO-8859-1, UTF-8). [UTF-8] is default
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
        </xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="base-adapter-type">
		<xsd:attribute name="id" type="xsd:string" />
		<xsd:attribute name="session-factory" type="xsd:string"
			use="required">
			<xsd:annotation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type
							type="nhethast.org.springframework.integration.googledrive.session.DefaultGoogleDriveSessionFactory" />
					</tool:annotation>
				</xsd:appinfo>
				<xsd:documentation><![CDATA[
                Reference to a [org.springframework.integration.ftp.session.DefaultFtpSessionFactory] bean.
            ]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="temporary-file-suffix" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					Extension used when downloading files. We
					change
					it right after we know it's
					downloaded.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>

		<xsd:attribute name="remote-file-separator" type="xsd:string"
			default="/">
			<xsd:annotation>
				<xsd:documentation>
					Allows you to provide remote file/directory
					separator character. DEFAULT:
					'/'
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attributeGroup ref="integration:smartLifeCycleAttributeGroup"/>
	</xsd:complexType>

</xsd:schema>
